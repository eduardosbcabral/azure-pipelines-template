jobs:
- job: 'Build'
  displayName: 'Build Application'
  dependsOn: 'CheckBuildVersion'
  condition: succeeded('CheckBuildVersion')
  steps:
  - script: | 
      echo "$(Build.BuildNumber)"
      if [[ -z "$(NugetConfigPath)" ]]
      then
        nuget_args=""
      else
        nuget_args="--configfile $(NugetConfigPath)"
      fi
      echo "##vso[task.setvariable variable=nuget_args]$nuget_args"
      echo "##vso[task.setvariable variable=nuget_args;isOutput=true]$nuget_args"
      echo "NugetArgs: $nuget_args"
    displayName: 'Check nuget custom config'
    name: 'CheckCustomNugetConfig'
    
  - script: |
      cd $(Agent.BuildDirectory)
      ls -la
      rm -rf .sonarqube
    displayName: 'Clean .sonarqube folder (avoid sonar usage in this job)'

  # -p:SonarQubeTargetsImported=true: avoid sonarqube usage
  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: 'build'
      projects: '**/*.sln'
      arguments: '-c Release -v normal /p:TrimUnusedDependencies=true -p:SonarQubeTargetsImported=true $(nuget_args)'

  - task: DotNetCoreCLI@2
    displayName: 'Publish Main Project'
    inputs:
      command: 'publish'
      projects: '$(MainProjectFolder)/*.csproj'
      # bin folder is the folder that the our default Dockerfile uses as the application location
      arguments: '-c Release -v normal --no-restore --no-build -o $(Build.ArtifactStagingDirectory)/application_$(Build.BuildNumber)'
      zipAfterPublish: false
      publishWebProjects: false
      outputDir: 
  - script: |
      mv $(Build.ArtifactStagingDirectory)/application_$(Build.BuildNumber)/* $(Build.ArtifactStagingDirectory)/application_$(Build.BuildNumber)/bin
      cp ./**/Dockerfile $(Build.ArtifactStagingDirectory)/application_$(Build.BuildNumber)
      cd $(Build.ArtifactStagingDirectory)
      find .
    displayName: 'Prepare artifact files'

  - task: PublishPipelineArtifact@1
    displayName: Store Application Artifact
    inputs:
      path: '$(Build.ArtifactStagingDirectory)/application_$(Build.BuildNumber)'
      artifact: application_build_artifact